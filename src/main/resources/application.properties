#Swagger
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

#TODO - Spring Data JPA
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#mariadb 경로임을 명시하고 경로와 데이터베이스명 입력
spring.datasource.url=jdbc:mariadb://localhost:3306/springboot
spring.datasource.username=root
spring.datasource.password=1234

#TODO - hibernate
# create: 애플리케이션이 가동되고 SessionFactory 가 실행될 때 기존 테이블을 지우고 새로 생성
# create-drop: create 와 동일한 기능을 수행하지만 애플리케이션을 종료하는 시점에 테이블을 지움
# update: SessionFactory 가 실행될 때 객체를 검사해서 변경된 스키마를 갱신. 기존에 저장된 데이터는 유지
# validate: update 처럼 객체를 검사하지만 스키마는 건드리지 않음. 검사 과정에서 데이터베이스의 테이블 정보와 객체의 정보가 다르면 에러 발생.
# none: ddl-auto 기능을 사용하지 않음
spring.jpa.hibernate.ddl-auto=create
# 하이버네이트가 생성한 쿼리문을 출력. format_sql 옵션을 통해 보기 좋게 포매팅 가능
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true